name: Deploy Petplace

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu
    permissions:
      packages: write

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Docker tag output (short SHA with timestamp)
        id: set_tag
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          TAG="$SHORT_SHA-$TIMESTAMP"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker images backend
        id: build-backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/petplace_backend:latest
            ghcr.io/${{ github.repository }}/petplace_backend:${{ steps.set_tag.outputs.tag }}

      - name: Create .env production file
        working-directory: ./frontend
        run: |
          echo "VITE_BASEAPI=${{ secrets.VITE_BASEAPI }}" >> .env.production
          echo "VITE_GOOGLE_REDIRECT_URL=${{ secrets.VITE_GOOGLE_REDIRECT_URL }}" >> .env.production
          echo "VITE_OAUTH_CLIENT_ID=${{ secrets.VITE_OAUTH_CLIENT_ID }}" >> .env.production
          echo "VITE_PUBLIC_API_KEY=${{ secrets.VITE_PUBLIC_API_KEY }}" >> .env.production

      - name: Build and push Docker images frontend
        id: build-frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/petplace_frontend:latest
            ghcr.io/${{ github.repository }}/petplace_frontend:${{ steps.set_tag.outputs.tag }}

    outputs:
      docker_tag: ${{ steps.set_tag.outputs.tag }}

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Create .env file
        working-directory: ./
        run: |
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_ROOT_PASSWORD=${{ secrets.DATABASE_ROOT_PASSWORD }}" >> .env
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
          echo "SECRET_ID=${{ secrets.SECRET_ID }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_API_INFO=${{ vars.GOOGLE_API_INFO }}" >> .env
          echo "FRONT_URL=${{ vars.FRONT_URL }}" >> .env
          echo "GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "VITE_BASEAPI=${{ secrets.VITE_BASEAPI }}" >> .env
          echo "VITE_GOOGLE_REDIRECT_URL=${{ secrets.VITE_GOOGLE_REDIRECT_URL }}" >> .env
          echo "VITE_OAUTH_CLIENT_ID=${{ secrets.VITE_OAUTH_CLIENT_ID }}" >> .env
          echo "VITE_PUBLIC_API_KEY=${{ secrets.VITE_PUBLIC_API_KEY }}" >> .env
          echo "DOCKER_TAG=${{ vars.DOCKER_TAG }}" >> .env

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old docker container
        run: docker-compose down

      - name: Deploy to server
        working-directory: ./
        run: |
          sed -i 's/^DOCKER_TAG=.*/DOCKER_TAG=${{ needs.build.outputs.docker_tag }}/' .env
          docker-compose -f docker-compose.prod.yml up -d

        # - name: Set up SSH
        #   uses: webfactory/ssh-agent@v0.9.0
        #   with:
        #     ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

        # - name: Add remote server to known_hosts
        #   run: |
        #     ssh-keyscan ${{ secrets.SERVER_USER }}@${{ secrets.REMOTE_SERVER }} >> ~/.ssh/known_hosts    # Replace user@REMOTE_SERVER

        # - name: Deploy to server
        #   run: |
        #     ssh ${{ secrets.SERVER_USER }}@${{ secrets.REMOTE_SERVER }} << 'EOF'                         # Replace user@remote_server
        #       sed -i 's/^DOCKER_TAG=.*/DOCKER_TAG=${{ needs.build-push-image.outputs.date }}/' .env
        #       docker compose up -d
        #     EOF
